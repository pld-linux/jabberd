--- sx.orig/io.c	Wed Dec 29 20:10:39 2004
+++ sx/io.c	Wed Dec 29 20:13:47 2004
@@ -26,6 +26,7 @@
     nad_t nad;
     char *errstring;
     int i;
+    int ns, elem;
 
     /* Note that buf->len can validly be 0 here, if we got data from
        the socket but the plugin didn't return anything to us (e.g. a
@@ -71,7 +72,17 @@
             if(NAD_ENS(nad, 0) >= 0 && NAD_NURI_L(nad, NAD_ENS(nad, 0)) == strlen(uri_STREAMS) && strncmp(NAD_NURI(nad, NAD_ENS(nad, 0)), uri_STREAMS, strlen(uri_STREAMS)) == 0 && NAD_ENAME_L(nad, 0) == 5 && strncmp(NAD_ENAME(nad, 0), "error", 5) == 0) {
 
                 errstring = NULL;
-                if(NAD_CDATA_L(nad, 0) > 0) {
+
+                /* get text error description if available - XMPP 4.7.2 */
+                if((ns = nad_find_scoped_namespace(nad, uri_STREAM_ERR, NULL)) >= 0) 
+                    if((elem = nad_find_elem(nad, 0, ns, "text", 1)) >= 0)
+                        if(NAD_CDATA_L(nad, elem) > 0) {
+                            errstring = (char *) malloc(sizeof(char) * (NAD_CDATA_L(nad, elem) + 1));
+                            sprintf(errstring, "%.*s", NAD_CDATA_L(nad, elem), NAD_CDATA(nad, elem));
+                        }
+
+                /* if not available, look for legacy error text as in <stream:error>description</stream:error> */
+                if (errstring == NULL && NAD_CDATA_L(nad, 0) > 0) {
                     errstring = (char *) malloc(sizeof(char) * (NAD_CDATA_L(nad, 0) + 1));
                     sprintf(errstring, "%.*s", NAD_CDATA_L(nad, 0), NAD_CDATA(nad, 0));
                 }

diff -ur s2s.orig/in.c s2s/in.c
--- s2s.orig/in.c	Sun Dec 26 20:38:11 2004
+++ s2s/in.c	Sun Dec 26 20:41:22 2004
@@ -353,7 +353,7 @@
 
     /* get current state */
     if((conn_state_t) xhash_get(in->states, rkey) == conn_VALID) {
-        log_debug(ZONE, "route %s is already valid, replying", rkey);
+        log_write(in->s2s->log, LOG_NOTICE, "[%d] [%s, port=%d] route '%s' is already valid: sending valid", in->fd, in->ip, in->port, rkey);
 
         /* its already valid, just reply right now */
         stanza_tofrom(nad, 0);
@@ -373,16 +373,9 @@
 
     /* not valid, so we need to verify */
 
-    /* set the route status to INPROGRESS and set timestamp */
-    xhash_put(in->states, pstrdup(xhash_pool(in->states), rkey), (void *) conn_INPROGRESS);
-
-    /* record the time that we set conn_INPROGRESS state */
-    now = time(NULL);
-    xhash_put(in->states_time, pstrdup(xhash_pool(in->states_time), rkey), (void *) now);
-
     /* need the key */
     if(NAD_CDATA_L(nad, 0) <= 0) {
-        log_debug(ZONE, "no dialback key given with db result packet");
+        log_write(in->s2s->log, LOG_NOTICE, "[%d] [%s, port=%d] no dialback key given with db result packet", in->fd, in->ip, in->port, rkey);
         free(rkey);
         nad_free(nad);
         jid_free(from);
@@ -391,6 +384,13 @@
     }
 
     log_debug(ZONE, "requesting verification for route %s", rkey);
+
+    /* set the route status to INPROGRESS and set timestamp */
+    xhash_put(in->states, pstrdup(xhash_pool(in->states), rkey), (void *) conn_INPROGRESS);
+
+    /* record the time that we set conn_INPROGRESS state */
+    now = time(NULL);
+    xhash_put(in->states_time, pstrdup(xhash_pool(in->states_time), rkey), (void *) now);
 
     free(rkey);
 
diff -ur s2s.orig/main.c s2s/main.c
--- s2s.orig/main.c	Sun Dec 26 20:38:11 2004
+++ s2s/main.c	Sun Dec 26 20:58:26 2004
@@ -168,6 +168,8 @@
   conn_state_t state;
   time_t now, dialback_time;
 
+  now = time(NULL);
+
   if(xhash_iter_first(conn->states))
      do {
            xhash_iter_get(conn->states, (const char **) &rkey, (void *) &state);
